https://github.com/mintesGeb/CS301/tree/main/w2d2

Todays assignement was not time taking, but it enforces our knowledge on stack. 
It took me around 45 minutes and it gave me a chance to revise the content I read
last week.

-I have answered a coding exercise question on vs (uploaded to Github link above)
-a photo of the stack exercise (also uploaded)
-and some stack answeres in a text editor (also uploaded)

Today we also revised the difference between function declarations and expressions.
In function declarations - the order of the elements of the signature is as follows

function functionName (par1, par2, ...){}

but in expressions:

const functionName = function (par1, par2, ...){}

another function expression type is arrow function:

const functionName = (par...) => {}

Question:
When a function is trying to look for a variable in the outer family does it only
look at above/before it was called or throughout the function? 
*so in that case of this example the order matters, not just existance*
for example:

function b() {
  function a() {
    console.log(x); //5
  }
  x = 5;
  a();
  console.log(x); //5
}
let x = 20;
b();
-------------------------
function b() {
  function a() {
    console.log(x); //20
  }
  a();
  x = 5;
  console.log(x); //5
}
let x = 20;
b();

Thank you 
Mintes